package th.co.ais.mimo.acim.api.service.impl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import th.co.ais.mimo.acim.api.model.SystemApproveHistory;
import th.co.ais.mimo.acim.api.model.UrClose;
import th.co.ais.mimo.acim.api.repository.BatchAutoCloseUrRepository;
import th.co.ais.mimo.acim.api.repository.BatchUserReOrgRepository;
import th.co.ais.mimo.acim.api.rest.model.Batch;
import th.co.ais.mimo.acim.api.service.BatchAutoCloseService;
import th.co.ais.mimo.acim.api.service.OmWebService;
import th.co.ais.mimo.acim.api.service.exception.ServiceException;
import th.co.ais.mimo.acim.api.util.CommonUtil;

@Service("batchAutoCloseService")
public class BatchAutoCloseUrServiceImpl implements BatchAutoCloseService{
	
	@Autowired
	BatchAutoCloseUrRepository batchAutoCloseUrRepository;
	
	@Autowired
	OmWebService omWebService;
	
	@Autowired
	BatchUserReOrgRepository batchUserReOrgRepository;
	
	private static final Logger logger = LoggerFactory.getLogger(BatchAutoCloseUrServiceImpl.class);
	
	@Override
	public Batch autoCloseUr() throws ServiceException {
		Batch batch;
		String urStep = "6"; 
		String urStepStatus = "1";
		String urDay = "5";
		String urStatus = "1";
		
		String status = "1";
		String remark = "SYSTEM AUTO CLOSE";
		String acimClose = "ACIM AUTO CLOSE";
		String userInfo = "";
		String Status = "2";
		
		String batchName = "Batch-AutoCloseUr";
		SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
		String date = formatter.format(new Date());
		
		try{
				logger.info("###### Start {} : {} ######",batchName,date);
				logger.info("Search selectUrClose,urStep:{},urStepStatus:{},urDay:{},urStatus:{} , {} {} ",urStep, urStepStatus, urDay, urStatus,batchName,date);
				List<UrClose> urCloseList =  batchAutoCloseUrRepository.selectUrClose(urStep, urStepStatus, urDay, urStatus );
				if(!urCloseList.isEmpty()){ 
					logger.info("Obj urCloseList : {} , {} {} ",urCloseList,batchName,date);
					for(UrClose urClose : urCloseList){
						SystemApproveHistory systemApproveHistory = new SystemApproveHistory();
						systemApproveHistory.setUrApproveHistoryId(CommonUtil.generateUUID());
						systemApproveHistory.setUrId(urClose.getUrId()); 
						systemApproveHistory .setUrStepId(urClose.getUrStepId());
						systemApproveHistory .setStatus(status);
						systemApproveHistory .setRemark(remark);
						systemApproveHistory .setCreatedBy(acimClose);
						systemApproveHistory .setUpdatedBy(acimClose);
						systemApproveHistory .setPincode(userInfo);
						systemApproveHistory .setEnname(userInfo);
						systemApproveHistory .setEnsurname(userInfo);
						systemApproveHistory .setUsername(userInfo);
						systemApproveHistory .setEmail(userInfo);
						systemApproveHistory .setPhone(userInfo);
						systemApproveHistory .setMobile(userInfo);
						systemApproveHistory .setTeamName(userInfo);
						batchAutoCloseUrRepository.insertSystemApproveHistory(systemApproveHistory);
						logger.info("Insert Data systemApproveHistory : {} , {} {} ",systemApproveHistory,batchName,date);
						
						batchAutoCloseUrRepository.updateUrStep(Status, acimClose, urClose.getUrStepId());
						logger.info("updateUrStep :Status:{},acimClose:{},UrStepId(){}, {} {} ",Status, acimClose, urClose.getUrStepId(),batchName,date);
						
						batchAutoCloseUrRepository.updateUr(Status, acimClose, urClose.getUrId());
						logger.info("updateUr :Status:{},acimClose:{},UrId(){}, {} {} ",Status, acimClose, urClose.getUrStepId(),batchName,date);
						
						batchAutoCloseUrRepository.updateUrForUser(Status, acimClose, urClose.getUrId());
						logger.info("updateUrForUser :Status:{},acimClose:{},UrId(){}, {} {} ",Status, acimClose, urClose.getUrStepId(),batchName,date);
					}
					batch = new Batch();
					batch.setBatchId(CommonUtil.generateUUID());
					batch.setBatchName("Batch-AutoCloseUr");
					batch.setStatus("200"); 
					batch.setMessage("Sucess");
					batch.setRunTime(new Date());
					batch.setCreatedBy("SYSTEM-ADMIN");
					batch.setUpdatedBy("SYSTEM-ADMIN");
					batch.setCreatedDate(new Date());
					batch.setUpdatedDate(new Date());
					batchUserReOrgRepository.insertBatch(batch);
					logger.info("###### Completed Process {} , {} ######",batchName,date);
					
				}else{
					batch = new Batch();
					batch.setBatchId(CommonUtil.generateUUID());
					batch.setBatchName("Batch-AutoCloseUr");
					batch.setStatus("200"); 
					batch.setMessage("Sucess");
					batch.setRunTime(new Date());
					batch.setCreatedBy("SYSTEM-ADMIN");
					batch.setUpdatedBy("SYSTEM-ADMIN");
					batch.setCreatedDate(new Date());
					batch.setUpdatedDate(new Date());
					batchUserReOrgRepository.insertBatch(batch);
					logger.info("Not founded ur to close , {}",batchName);
					logger.info("###### Completed Process {} , {} ######",batchName,date);
				}
		}catch(Exception e){
			batch = new Batch();
			batch.setBatchId(CommonUtil.generateUUID());
			batch.setBatchName("Batch-AutoCloseUr");
			batch.setStatus("201"); 
			batch.setMessage("Fail");
			batch.setRunTime(new Date());
			batch.setCreatedBy("SYSTEM-ADMIN");
			batch.setUpdatedBy("SYSTEM-ADMIN");
			batch.setCreatedDate(new Date());
			batch.setUpdatedDate(new Date());
			batchUserReOrgRepository.insertBatch(batch);
			logger.error("###### Processed fail {} , {} ######",batchName,date);
			throw ServiceException.get500SystemError(e);
		}
		return batch;
	}
	
	
	

}
